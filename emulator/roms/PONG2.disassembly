0x200: Call subroutine at address 0x2F6
0x202: V11 = 0xC
0x204: V12 = 0x3F
0x206: V13 = 0xC
0x208: I = 0x2EA
0x20A: draw(V10, V11, 0x6)
0x20C: draw(V12, V13, 0x6)
0x20E: V14 = 0x0
0x210: Call subroutine at address 0x2D4
0x212: V6 = 0x3
0x214: V8 = 0x2
0x216: V0 = 0x60
0x218: delay_timer(V0)
0x21A: V0 = get_delay()
0x21C: if (V0 == 0x0)
0x21E: goto 0x21A
0x220: V7 = rand() & 0x17
0x222: V7 += 0x8
0x224: V9 = 0xFF
0x226: I = 0x2F0
0x228: draw(V6, V7, 0x1)
0x22A: I = 0x2EA
0x22C: draw(V10, V11, 0x6)
0x22E: draw(V12, V13, 0x6)
0x230: V0 = 0x1
0x232: if (key() != V0)
0x234: V11 += 0xFE
0x236: V0 = 0x4
0x238: if (key() != V0)
0x23A: V11 += 0x2
0x23C: V0 = 0x1F
0x23E: V11 &= V0
0x240: draw(V10, V11, 0x6)
0x242: V0 = 0xC
0x244: if (key() != V0)
0x246: V13 += 0xFE
0x248: V0 = 0xD
0x24A: if (key() != V0)
0x24C: V13 += 0x2
0x24E: V0 = 0x1F
0x250: V13 &= V0
0x252: draw(V12, V13, 0x6)
0x254: I = 0x2F0
0x256: draw(V6, V7, 0x1)
0x258: V6 += V8
0x25A: V7 += V9
0x25C: V0 = 0x3F
0x25E: V6 &= V0
0x260: V1 = 0x1F
0x262: V7 &= V1
0x264: if (V6 != 0x0)
0x266: goto 0x278
0x268: if (V6 != 0x3F)
0x26A: goto 0x282
0x26C: if (V7 != 0x1F)
0x26E: V9 = 0xFF
0x270: if (V7 != 0x0)
0x272: V9 = 0x1
0x274: draw(V6, V7, 0x1)
0x276: goto 0x22A
0x278: V8 = 0x2
0x27A: V3 = 0x1
0x27C: V0 = V7
0x27E: V0 -= V11
0x280: goto 0x28A
0x282: V8 = 0xFE
0x284: V3 = 0xA
0x286: V0 = V7
0x288: V0 -= V13
0x28A: if (V15 == 0x1)
0x28C: goto 0x2A2
0x28E: V1 = 0x2
0x290: V0 -= V1
0x292: if (V15 == 0x1)
0x294: goto 0x2BA
0x296: V0 -= V1
0x298: if (V15 == 0x1)
0x29A: goto 0x2C8
0x29C: V0 -= V1
0x29E: if (V15 == 0x1)
0x2A0: goto 0x2C2
0x2A2: V0 = 0x20
0x2A4: sound_timer(V0)
0x2A6: Call subroutine at address 0x2D4
0x2A8: V14 += V3
0x2AA: Call subroutine at address 0x2D4
0x2AC: V6 = 0x3E
0x2AE: if (V3 == 0x1)
0x2B0: V6 = 0x3
0x2B2: V8 = 0xFE
0x2B4: if (V3 == 0x1)
0x2B6: V8 = 0x2
0x2B8: goto 0x216
0x2BA: V9 += 0xFF
0x2BC: if (V9 != 0xFE)
0x2BE: V9 = 0xFF
0x2C0: goto 0x2C8
0x2C2: V9 += 0x1
0x2C4: if (V9 != 0x2)
0x2C6: V9 = 0x1
0x2C8: V0 = 0x4
0x2CA: sound_timer(V0)
0x2CC: V6 += 0x1
0x2CE: if (V6 != 0x40)
0x2D0: V6 += 0xFE
0x2D2: goto 0x26C
0x2D4: I = 0x2F2
0x2D6: set_bcd(V14)
0x2D8: reg_load(V2, &I)
0x2DA: I = sprite_addr[V1]
0x2DC: V4 = 0x14
0x2DE: V5 = 0x0
0x2E0: draw(V4, V5, 0x5)
0x2E2: V4 += 0x15
0x2E4: I = sprite_addr[V2]
0x2E6: draw(V4, V5, 0x5)
0x2E8: Return from a subroutine
0x2EA: V0 = V8
0x2EC: V0 = V8
0x2EE: V0 = V8
0x2F0: V0 = V0